clear
ls
ls -la
c
clear
ls -la
exit
clear
ls
env
ld
ls
env
path
env path
env
c
cls
clear
$PATH
$env.PATH
$env.DOTS
$env.FZF_DEFAULT_OPTS
gzg
fzf
d
yazi
d
fzf
d
yazi
help config nu
config nu
config nu -d
ls
config nu
c
exit
ls
v
ecit
exit
config nu -d
config nu -d > config.nu
exit
ex8t
exit
help config nu
help 
d
ls
bqt config.nu
bat config.nu
config nu
exit
$env.config | table -e | bat -p
$env.config.table
$env.config.table.mode
$env.config.table.mode 
$env.config.table.mode help
$env.config.table.mode.
$env.config.table.mode.$nu.default-config-dir
$nu.default-config-dir
config nu --doc | nu-highlight | less -R
"default", "basic", "compact", "compact_double", "heavy", "light", "none", "reinforced",                                                      # "rounded", "thin", "with_love", "psql", "markdown", "dots", "restructured", "ascii_rounded",                                                          # or "basic_compact"
$env.config.table.mode.
$env.config.table.mode = thin
$env.config.table.mode
cinfig nu
config nu
exit
ls
$env.config
$env.config.table.mode
$env.config.table
$env.config | table -e | bat -p
config nu
exit
ls
$env.config | table -e | bat -p
config nu
exit
ls
$env.config | table -e | bat -p
config nu
config nu --doc | nu-highlight | less -R
exit
ls
$env.config.table.mode
$env.config.table.mode: 
$env.config.table = { }
$env.config.table = {}
$env.config.table.mode
$env.config.table = { mode: default }
$env.config.table.mode
$env.config.table = { mode: markdowb }
$env.config.table = { mode: markdown }
ls
$env.config.table = { mode: light }
ls
$env.config.table = { mode: thin }
ls
$env.config.table = { mode: compact }
ls
$env.config.table = { mode: psql }
ls
c
clear
ls
$env.config.table = { mode: thin }
config nu
exit
ls
d
env
exit
d
cd
.d
d
exit
d
l
exit
l
exit
l
cd
l
exit
c
d
c
l
<<<<<<< HEAD
d
c
=======
ls
ls -la
ls --help
ls -f
c
ls -a **/*
c
ls --help
ls -a
ls -a ~ | where type == dir
ls ...(glob **/*.{rs,toml})
c
l
ls
cd dots
c
l
pwd
git
d
l
eza
c
env
>>>>>>> edec7c6 (meh)
ls
ebnv
env
cd
env
ls -la
ls -a
d
exit
help
help config
config nu
d
exit
l
ll
d
ezit
l
ll
ls
c
config nu
exit
l
env
ls
config nu
c
l
d
cd
path
echo $path
env
env path
path
$env
$env.path
prettybat
prettybat .zshrc
bat-modules 
bat-modules --update
batwatch date
which shitime
which shitime path
path  which shitime
path $(which shitime)
cat shittime
cat shitime
cat /data/data/com.termux/files/home/dots/bin/shitume
cat /data/data/com.termux/files/home/dots/bin/shitime
batwatch -t
batwatch -t -n1 "date '+%l:%M:%S'|toilet -f future -k"
batwatch --help
batwatch --command -n1 "date '+%l:%M:%S'|toilet -f future -k"
batwatch --command "date '+%l:%M:%S'|toilet -f future -k"
c
batwatch --command -n1 "date '+%l:%M:%S'"
which daye
which date
batwatch --command -n1 "da$te '+%l:%M:%S'"
batwatch --command -n1 date '+%l:%M:%S'
batwatch --command -n1 date '+%l:%M:%S' | figlet
batwatch --command -n1 date '+%l:%M:%S' | toilet -f future -k
batwatch --help
shitme
shitime
c
l
ls
c
env
gzg
fzf
c
l
d
..
l
ls
c
l
config nu
l
la
c
cd
env
l;l
l
ll
c
ls
clear
l
env
c
weather
weather | describe
blue
catppuccin
catppuccin | describe
catppuccin -f mocha | describe
catppuccin -f mocha -c blue | describe
catppuccin -f mocha -c blue
catppuccin -h
catppuccin -h |describe
echo test
echo test | describe
