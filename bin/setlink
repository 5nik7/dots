#!/bin/bash

# Synopsis: Symbolic link a file or directory to another file or directory.

# Parameters
base=$1
target=$2

# Resolve paths
base=$(realpath "$base")
target=$(realpath "$target")

# Check if base exists
if [ ! -e "$base" ]; then
  echo ""
  echo -e "\e[31m $base does not exist.\e[0m"
  exit 1
fi

# Function to create a backup
create_backup() {
  backup_dir="$HOME/backups"
  bak_date=$(date +"%m-%d-%Y-%H-%M")
  target_leaf=$(basename "$target")
  backup_file_name="$target_leaf.$bak_date.bak"
  if [ ! -d "$backup_dir" ]; then
    echo -e "\e[33m  Creating backup directory: \e[0m\c"
    mkdir -p "$backup_dir"
    echo -e "\e[37m$backup_dir\e[0m"
  fi
  echo ""
  echo -e "\e[33m Backup: \e[0m\c"
  backup_file_path=$(dirname "$target")/$backup_file_name
  mv "$target" "$backup_file_path"
  mv "$backup_file_path" "$backup_dir"
  echo -e "\e[37m$backup_dir/$backup_file_name\e[0m"
}

# Function to create a symbolic link
create_link() {
  ln -s "$base" "$target"

  arrow="  -->  "
  basepath=$(realpath "$base")
  basedir=$(dirname "$basepath")
  baseleaf=$(basename "$basepath")
  basedircolor="\e[34m"
  targetpath=$(realpath "$target")
  targetdir=$(dirname "$targetpath")
  targetleaf=$(basename "$targetpath")
  targetdircolor="\e[34m"

  if [ "$basedir" == "$DOTS" ] || [ "$(dirname "$basepath")" == "$DOTFILES" ]; then
    basedircolor="\e[35m"
    basedir=" ï„‘  "
  else
    basedir=" $basedir/"
  fi

  targetdir="$targetdir/"
  echo ""
  echo -e "$basedircolor$basedir\e[36m$baseleaf\e[90m$arrow$targetdircolor$targetdir\e[36m$targetleaf\e[0m"
  echo ""
}

# Check if target exists
if [ ! -e "$target" ]; then
  create_link
  exit 0
fi

# Try to create the symbolic link
{
  if [ -e "$target" ]; then
    if [ "$(readlink "$target")" == "$base" ]; then
      echo ""
      echo -e "\e[90m $base and $target already linked.\e[0m"
      exit 0
    else
      echo ""
      echo -e "\e[35m $(realpath "$target") \e[0m\c"
      echo -e "\e[37malready exists. \e[0m"
      echo -e "\e[36m Create backup file and symlink? \e[0m\c"
      read -p "[Y/n] " user_choice
      if [ "$user_choice" == "Y" ] || [ "$user_choice" == "y" ] || [ -z "$user_choice" ]; then
        create_backup
        create_link
      else
        echo ""
        echo -e "\e[31m Operation cancelled.\e[0m"
        echo ""
        exit 0
      fi
    fi
  fi
} || {
  echo " Failed to create symbolic link: $?"
}