#!/usr/bin/env bash

declare -r esc=$'\033'
declare -r c_reset="${esc}[0m"
declare -r bold="${esc}[1m"
declare -r dim="${esc}[2m"
declare -r italic="${esc}[3m"
declare -r underline="${esc}[4m"
declare -r rev="${esc}[7m"
declare -r fg_rosewater="${esc}[38;2;245;224;220m"
declare -r fg_flamingo="${esc}[38;2;242;205;205m"
declare -r fg_pink="${esc}[38;2;245;194;231m"
declare -r fg_mauve="${esc}[38;2;203;166;247m"
declare -r fg_red="${esc}[38;2;243;139;168m"
declare -r fg_maroon="${esc}[38;2;235;160;172m"
declare -r fg_peach="${esc}[38;2;250;179;135m"
declare -r fg_yellow="${esc}[38;2;249;226;175m"
declare -r fg_green="${esc}[38;2;166;227;161m"
declare -r fg_teal="${esc}[38;2;148;226;213m"
declare -r fg_sky="${esc}[38;2;137;220;235m"
declare -r fg_sapphire="${esc}[38;2;116;199;236m"
declare -r fg_blue="${esc}[38;2;137;180;250m"
declare -r fg_lavender="${esc}[38;2;180;190;254m"
declare -r fg_text="${esc}[38;2;205;214;244m"
declare -r fg_subtext1="${esc}[38;2;186;194;224m"
declare -r fg_subtext0="${esc}[38;2;166;173;200m"
declare -r fg_overlay2="${esc}[38;2;147;153;178m"
declare -r fg_overlay1="${esc}[38;2;127;132;156m"
declare -r fg_overlay0="${esc}[38;2;108;113;134m"
declare -r fg_surface2="${esc}[38;2;88;91;112m"
declare -r fg_surface1="${esc}[38;2;69;71;90m"
declare -r fg_surface0="${esc}[38;2;49;50;68m"
declare -r fg_base="${esc}[38;2;30;30;46m"
declare -r fg_mantle="${esc}[38;2;24;24;37m"
declare -r fg_crust="${esc}[38;2;17;17;27m"
declare -r bg_mantle="${esc}[48;2;24;24;37m"
declare -r spacer="${fg_surface0}│${c_reset}"
declare -r caticon="󰄛"

default="mocha"

mocha() {
  rosewater='#f5e0dc'
  flamingo='#f2cdcd'
  pink='#f5c2e7'
  mauve='#cba6f7'
  red='#f38ba8'
  maroon='#eba0ac'
  peach='#fab387'
  yellow='#f9e2af'
  green='#a6e3a1'
  teal='#94e2d5'
  sky='#89dceb'
  sapphire='#74c7ec'
  blue='#89b4fa'
  lavender='#b4befe'
  text='#cdd6f4'
  subtext1='#bac2de'
  subtext0='#a6adc8'
  overlay2='#9399b2'
  overlay1='#7f849c'
  overlay0='#6c7086'
  surface2='#585b70'
  surface1='#45475a'
  surface0='#313244'
  base='#1e1e2e'
  mantle='#181825'
  crust='#11111b'
}

macchiato() {
  rosewater='#f4dbd6'
  flamingo='#f0c6c6'
  pink='#f5bde6'
  mauve='#c6a0f6'
  red='#ed8796'
  maroon='#ee99a0'
  peach='#f5a97f'
  yellow='#eed49f'
  green='#a6da95'
  teal='#8bd5ca'
  sky='#91d7e3'
  sapphire='#7dc4e4'
  blue='#8aadf4'
  lavender='#b7bdf8'
  text='#cad3f5'
  subtext1='#b8c0e0'
  subtext0='#a5adcb'
  overlay2='#939ab7'
  overlay1='#8087a2'
  overlay0='#6e738d'
  surface2='#5b6078'
  surface1='#494d64'
  surface0='#363a4f'
  base='#24273a'
  mantle='#1e2030'
  crust='#181926'
}

latte() {
  rosewater='#dc8a78'
  flamingo='#dd7878'
  pink='#ea76cb'
  mauve='#8839ef'
  red='#d20f39'
  maroon='#e64553'
  peach='#fe640b'
  yellow='#df8e1d'
  green='#40a02b'
  teal='#179299'
  sky='#04a5e5'
  sapphire='#209fb5'
  blue='#1e66f5'
  lavender='#7287fd'
  text='#4c4f69'
  subtext1='#5c5f77'
  subtext0='#6c6f85'
  overlay2='#7c7f93'
  overlay1='#8c8fa1'
  overlay0='#9ca0b0'
  surface2='#acb0be'
  surface1='#bcc0cc'
  surface0='#ccd0da'
  crust='#dce0e8'
  mantle='#e6e9ef'
  base='#eff1f5'
}

frappe() {
  rosewater='#f2d5cf'
  flamingo='#eebebe'
  pink='#f4b8e4'
  mauve='#ca9ee6'
  red='#e78284'
  maroon='#ea999c'
  peach='#ef9f76'
  yellow='#e5c890'
  green='#a6d189'
  teal='#81c8be'
  sky='#99d1db'
  sapphire='#85c1dc'
  blue='#8caaee'
  lavender='#babbf1'
  text='#c6d0f5'
  subtext1='#b5bfe2'
  subtext0='#a5adce'
  overlay2='#949cbb'
  overlay1='#838ba7'
  overlay0='#737994'
  surface2='#626880'
  surface1='#51576d'
  surface0='#414559'
  base='#303446'
  mantle='#292c3c'
  crust='#232634'
}

cmd_exists() {
  command -v "$1" &>/dev/null
}

start() {
  if cmd_exists pastel; then
    pastel paint --no-newline "${!var}" '  󰄮  '
  else
    printf "  "
  fi
}

color_codes() {
  if cmd_exists pastel; then
    print_ansi_24bit="$(pastel format ansi-24bit "${!var}")"
    print_rgb="$(pastel format rgb "${!var}")"
    print_hsl="$(pastel format hsl "${!var}")"
    printf "${bold}%-9s${c_reset} ${spacer} %s ${spacer} %-18s ${spacer} %s\n" "$var" "${!var}" "$print_rgb" "$print_hsl"
  else
    printf "${bold}%-9s${c_reset} ${spacer} %s\n" "$var" "${!var}"
  fi
}

print_colors() {
  echo -e "${fg_mauve}${bold} $FLAVOR:${c_reset}"
  for var in rosewater flamingo pink mauve red maroon peach yellow green teal sky sapphire blue lavender text subtext1 subtext0 overlay2 overlay1 overlay0 surface2 surface1 surface0 base mantle crust; do
    start
    color_codes
  done
}

list_colors() {
  echo -e "${fg_mauve}${bold} colors:${c_reset}"
  for col in rosewater flamingo pink mauve red maroon peach yellow green teal sky sapphire blue lavender text subtext1 subtext0 overlay2 overlay1 overlay0 surface2 surface1 surface0 base mantle crust; do
    printf "${fg_text}   %s${c_reset}\n" "$col"
  done
}

list_flavors() {
  echo -e "${fg_mauve}${bold} flavors:${c_reset}"
  for flav in mocha macchiato frappe latte; do
    if [[ "$flav" == "$FLAVOR" ]]; then
      flavcol="${fg_pink}"
    else
      flavcol="${fg_text}"
    fi
    if [[ "$flav" == "$default" ]]; then
      printf "${flavcol}   %s${c_reset} ${fg_surface2}%s${c_reset}\n" "$flav" "(default)"
    else
      printf "${flavcol}   %s${c_reset}\n" "$flav"
    fi
  done
}

print_all() {
  for flav in mocha macchiato frappe latte; do
    FLAVOR="$flav"
    case "$FLAVOR" in
    mocha) mocha ;;
    macchiato) macchiato ;;
    latte) latte ;;
    frappe) frappe ;;
    esac

    echo
    print_colors
  done
  echo
}

err() {
  printf "${fg_red} ${caticon}${bold} %s${c_reset}\n" "$1"
}

usage() {
  # echo -e "${bg_mantle}"
  echo -e ""
  echo -e "${fg_surface1}     |\___/|"
  echo -e "     )     ("
  echo -e "    =\     /="
  echo -e "      ${fg_red})═══(${fg_overlay0}    Usage: ${bold}${fg_mauve}catppuccin${c_reset} ${fg_pink}-f ${fg_text}FLAVOR ${fg_overlay0}[${fg_pink}-c ${fg_text}COLOR${fg_overlay0}]"
  echo -e "${fg_surface1}     /     \\"
  echo -e "     |     |     ${fg_overlay0}Options:"
  echo -e "${fg_surface1}    /       \     ${fg_pink}-f, --flavor    ${fg_lavender}Set the Catppuccin flavor"
  echo -e "${fg_surface1}    \       /     ${fg_pink}-c, --color     ${fg_lavender}Output specified color value"
  echo -e "${fg_surface1}     \__  _/      ${fg_pink}-a, --all       ${fg_lavender}Show all colors"
  echo -e "${fg_surface1}       ( (        ${fg_pink}-h, --help      ${fg_lavender}Show this help message"
  echo -e "${fg_surface1}        ) )"
  echo -e "       (_("
  echo -e "${c_reset}"
}

# Parse arguments
# FLAVOR=""
COLOR=""

if [[ ! -z "$FLAVOR" ]]; then
  FLAVOR="$default" # Default flavor if none specified
fi

if [[ $# == 0 ]]; then
  usage
  exit 0
fi

while [[ $# -gt 0 ]]; do
  case "$1" in
  -h | --help)
    usage
    exit 0
    ;;
  -a | --all)
    print_all
    exit 0
    ;;
  -f | --flavor)
    if [[ -n "$2" ]]; then
      FLAVOR="$2"
      shift 2
    else
      echo
      list_flavors
      echo
      exit 0
    fi
    ;;
  mocha | macchiato | frappe | latte)
    FLAVOR="$1"
    shift
    ;;
  -c | --color)
    if [[ -n "$2" ]]; then
      COLOR="$2"
      shift 2
    else
      echo
      list_colors
      echo
      exit 0
    fi
    ;;
  rosewater | flamingo | pink | mauve | red | maroon | peach | yellow | green | teal | sky | sapphire | blue | lavender | text | subtext1 | subtext0 | overlay2 | overlay1 | overlay0 | surface2 | surface1 | surface0 | base | mantle | crust)
    COLOR="$1"
    shift
    ;;
  *)
    echo -e "${fg_red}Unknown option:${fg_text} $1${c_reset}"
    exit 1
    ;;
  esac
done

case "$FLAVOR" in
mocha) mocha ;;
macchiato) macchiato ;;
latte) latte ;;
frappe) frappe ;;
*)
  echo
  err "'$FLAVOR' is not a flavor."
  echo
  list_flavors
  echo
  exit 0
  ;;
esac

if [[ -n "$COLOR" ]]; then
  if [[ -n "${!COLOR}" ]]; then
    echo "${!COLOR}"
  else
    echo
    err "Color '$COLOR' not found in flavor '$FLAVOR'."
    echo
    list_colors
    echo
    exit 1
  fi
else
  echo
  print_colors
  echo
fi
