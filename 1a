#!/data/data/com.termux/files/usr/bin/env bash

declare -r esc=$'\033'
declare -r c_reset="${esc}[0m"
declare -r c_red="${esc}[31m"
declare -r c_green="${esc}[32m"
declare -r c_yellow="${esc}[33m"
red='#f38ba8'
yellow='#f9e2af'
green='#a6e3a1'
brightgreen='#8eff85'
newline="\n"
resetcol="$c_reset"
BTRYCOL=''
baticon=''
battery_output=''
percent_sign='%'
spacer=''

cmd_exists() {
    command -v "$1" &>/dev/null
}

usage() {
    printf "${c_red}Usage: ${c_reset}${0##*/} [options]\n\n"
    cat <<"EOF"
options:
  -h, --help        show this help message and exit
  -nc, --no-color   disable color output
  -ni, --no-icon    disable icon output
  -in, --inline     do not add a newline at the end of the output
  -c, --color       display the color gradient for the battery percentage
  -i, --icon        display the battery icon only
  -np, --no-percent, --no-percentage
                       disable percentage output
EOF
}

BATTERY=$(termux-battery-status | grep percentage | awk '{print $2}' | tr -d ',')

if ((BATTERY == 100)); then
    baticon="󰁹"
    batcol="$c_green"
    BTRYCOL="green"
elif ((BATTERY >= 90)); then
    baticon="󰂂"
    batcol="$c_green"
    BTRYCOL="green"
elif ((BATTERY >= 80)); then
    baticon="󰂁"
    batcol="$c_green"
    BTRYCOL="green"
elif ((BATTERY >= 70)); then
    baticon="󰂀"
    batcol="$c_green"
    BTRYCOL="green"
elif ((BATTERY >= 60)); then
    baticon="󰁿"
    batcol="$c_green"
    BTRYCOL="green"
elif ((BATTERY >= 50)); then
    baticon="󰁽"
    batcol="$c_yellow"
    BTRYCOL="yellow"
elif ((BATTERY >= 40)); then
    baticon="󰁾 "
    batcol="$c_yellow"
    BTRYCOL="yellow"
elif ((BATTERY >= 30)); then
    baticon="󰁼"
    batcol="$c_yellow"
    BTRYCOL="yellow"
elif ((BATTERY >= 20)); then
    baticon="󰁻"
    batcol="$c_red"
    BTRYCOL="red"
elif ((BATTERY >= 10)); then
    baticon="󰁺"
    batcol="$c_red"
    BTRYCOL="red"
else
    baticon="󱊡"
    batcol="$c_red"
    BTRYCOL="red"
fi

printcolor() {
    case "$1" in
    *)
        color_format="$1"
        shift
        ;;
    esac

    if [[ -n "$color_format" ]]; then
        color_format='ansi-24bit'
    fi

    echo -e "$(pastel gradient -n 100 "$red" "$yellow" "$green" | pastel format "$color_format" | sed -n "${BATTERY}p")"
}

color_format='ansi-24bit'
batcolor=$(pastel gradient -n 100 "$red" "$yellow" "$green" | pastel format $color_format | sed -n "${BATTERY}p")

battery_output="$BATTERY"

while true; do
    case $1 in
    -h | --help | help)
        usage
        exit
        ;;
    -in | --inline)
        newline=''
        shift
        ;;
    -c | -color | --color)
        printcolor
        exit
        ;;
    -i | -icon | --icon)
        battery_output=''
        percent_sign=''
        spacer=''
        shift
        ;;
    -nc | --no-color)
        batcolor=''
        resetcol=''
        shift
        ;;
    -ni | --no-icon)
        baticon=''
        spacer=''
        shift
        ;;
    -np | --no-percent | --no-percentage)
        percent_sign=''
        shift
        ;;
    *) break ;;
    esac
done

printf "${batcolor}%s${resetcol}${newline}" "$baticon$spacer$battery_output$percent_sign"
